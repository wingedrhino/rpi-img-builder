#!/usr/bin/env bash
source /root/source.txt
source /root/userdata.txt

set -o errexit
set -o pipefail
set -o nounset

echo 'nameserver 8.8.8.8' > /etc/resolv.conf
echo 'nameserver 8.8.4.4' >> /etc/resolv.conf

mount -t proc proc proc/
mount -t sysfs sys sys/

export DEBIAN_FRONTEND="noninteractive"

apt-get update
apt-get install -y apt-utils
### Locales
apt install -y locales locales-all
localedef -c -f UTF-8 -i en_US en_US.UTF-8
dpkg-reconfigure locales
### Timezone
ln -snf /usr/share/zoneinfo/America/New_York /etc/localtime
echo -n 'America/New_York' > /etc/timezone
apt upgrade -y
apt dist-upgrade -y
apt install -y ${PKGS1}
echo
echo -n 'bcm2710' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2710' /etc/hosts
adduser ${user} --gecos "bcm2710" --disabled-password
### Password
echo "${user}:${passwd}" | chpasswd
adduser ${user} sudo
adduser ${user} audio
adduser ${user} dialout
adduser ${user} video
adduser ${user} disk
groupadd spi
groupadd i2c
groupadd gpio
adduser ${user} spi
adduser ${user} i2c
adduser ${user} gpio

#### Scripts
echo
echo Creating firstboot.
tee /usr/local/sbin/firstboot <<EOF
#!/bin/bash
### Grow Partition
echo
echo -e "\e[0;31mGrumble Grumble ...\e[0m"
bash growpart /dev/mmcblk0 2
sleep 1s
resize2fs /dev/mmcblk0p2
### Renew SSH keys
sleep 1s
/bin/rm -v /etc/ssh/ssh_host_*
dpkg-reconfigure openssh-server
service ssh restart
### Fix boot partition
umount /boot
sleep 1s
fsck.fat -trawl /dev/mmcblk0p1
sleep 1s
mount /boot
### Clean up
rm -f /var/cache/debconf/*
rm -f /usr/local/sbin/firstboot
update-rc.d firstboot remove
rm /etc/init.d/firstboot
echo -e "\e[0;31mDone.\e[0m"
echo
EOF

echo
echo Creating actled switch.
tee /usr/local/sbin/actled <<EOF
#!/bin/bash
sh -c 'echo 0 > /sys/devices/platform/leds/leds/led0/brightness'
EOF

echo
echo Creating pwrled switch.
tee /usr/local/sbin/pwrled <<EOF
#!/bin/bash
sh -c 'echo 0 > /sys/devices/platform/leds/leds/led1/brightness'
EOF

echo
echo Creating set governor.
tee /usr/local/sbin/set-governor <<EOF
#!/bin/bash
# set governor
echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
EOF
chmod +x /usr/local/sbin/*
chown -R root:root /usr/local/sbin/

echo
echo Moving scripts.
sleep 1s
cd ~
mkdir -p /usr/local/bin
mkdir -p /usr/local/sbin
# Scripts
mv -f run-setup /usr/local/bin/
mv -f sysinfo /usr/local/bin/
mv -f temp-monitor /usr/local/bin/tmon
mv -f wifiscan /usr/local/bin/
mv -f growpart /usr/bin/
# Inits
mv -f firstboot /etc/init.d/
mv -f pwrledoff /etc/init.d/
mv -f actledoff /etc/init.d/
mv -f governor /etc/init.d/
mv -f bthelper /etc/init.d/
mv -f zramswap /etc/init.d/
# Own
chmod +x /usr/bin/growpart
chown root:root /usr/bin/growpart
chmod +x /usr/local/bin/*
chown -R root:root /usr/local/bin/
echo Done.

#### MOTD
echo
echo Adding motd.
sleep 1s
mkdir -p /etc/update-motd.d
tee /etc/update-motd.d/15-brand <<EOF
#!/bin/bash
echo
toilet -f small --filter metal '${BRAND3}'
echo 
EOF
mv -f 20-sysinfo /etc/update-motd.d/20-sysinfo
chmod +x /etc/update-motd.d/*
chown root:root /etc/update-motd.d/15-brand
chown root:root /etc/update-motd.d/20-sysinfo
echo Done.

### Move mc skins
echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc.
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mkdir -p /home/${user}/.config/mc
mv -f user-ini /home/${user}/.config/mc/ini
mv -f nanorc-user /home/${user}/.nanorc
chown -R root:root /root
chown -R ${user}:${user} /home/${user}
echo Done.

#### Adding firmware
echo
echo Adding pi firmware.
apt install -y zip unzip p7zip-full
unzip -qq master.zip
rm -f master.zip
mkdir -p /lib/firmware
mv -f firmware-nonfree-master/* /lib/firmware
rm -fdR firmware-nonfree-master
cd /lib/firmware/brcm
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43455-sdio.raspberrypi%2C3-model-b-plus.txt
cd ~
echo Done.

#### Extra bluetooth firmware
echo
echo Adding extra bluetooth firmware.
sleep 1s
mv fw-0a5c_21e8.hcd /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
cp /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
chown root:root /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
chown root:root /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
echo Done.

####
echo
echo Bluetooth udev rule.
sleep 1s
mkdir -p /lib/udev/rules.d/
mv -f 99-com.rules /lib/udev/rules.d/99-com.rules
echo Done.

#### Software
echo
echo Installing firmware and needed packages.
sleep 1s
apt -y clean
apt -y autoclean
apt update
apt install -y ${PKGS2} ${FIRMWARE}

### Network Setup
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
mv -f interfaces /etc/network/interfaces
chown root:root /etc/network/interfaces
mv -f wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
chown root:root /etc/wpa_supplicant/wpa_supplicant.conf
ln -sr /etc/network/if-up.d/00check-network-cable /etc/network/if-pre-up.d/00check-network-cable
sed -i 's/#CONFIGURE_INTERFACES=yes/CONFIGURE_INTERFACES=yes/g' /etc/default/networking
sed -i 's/#WAIT_ONLINE_METHOD=ifup/WAIT_ONLINE_METHOD=ifup/g' /etc/default/networking
sed -i 's/#WAIT_ONLINE_TIMEOUT=300/WAIT_ONLINE_TIMEOUT=10/g' /etc/default/networking
echo Done.

### ZSWAP
echo
echo Adding zramswap config.
sleep 1s
rm -f /etc/default/zramswap
mv -f zramswap.conf /etc/default/zramswap
chown root:root /etc/default/zramswap
echo Done.

### MOTD instructions
echo
echo Adding motd first boot.
sleep 1s
rm -f /etc/motd
mv -f motd /etc/motd
mv -f new.motd /etc/new.motd
chown root:root /etc/motd
chown root:root /etc/new.motd
echo Done.

#### Clean up packages
echo
echo Cleaning up.
sleep 1s
apt -y autoremove
apt -y clean
apt -y autoclean
echo Done.

### Regulatory db
echo
echo Adding regdb.
sleep 1s
apt update
apt install -y crda
git clone https://kernel.googlesource.com/pub/scm/linux/kernel/git/sforshee/wireless-regdb
echo
echo Moving db files.
sleep 1s
cd wireless-regdb
cp -f regulatory.db /lib/firmware/regulatory.db
cp -f regulatory.db.p7s /lib/firmware/regulatory.db.p7s
cd ~
rm -fdr wireless-regdb
echo Done.

### Adding sys-mods
echo
echo Building raspi-sys-mods package.
sleep 1s
apt install -y debhelper d-shlibs rfkill dosfstools psmisc
git clone https://github.com/RPi-Distro/raspberrypi-sys-mods.git
mv raspberrypi-sys-mods.patch raspberrypi-sys-mods/
cd raspberrypi-sys-mods
patch -p1 < raspberrypi-sys-mods.patch
rm -f raspberrypi-sys-mods.patch
dpkg-buildpackage -us -uc
cd ~
dpkg -i raspberrypi-sys-mods*.deb
rm -fdR raspberrypi-sys-mods*
echo Done.

#### Sudoers file 
echo
echo Creating sudoers file.
sleep 1s
rm -f /etc/sudoers.d/010_pi-nopasswd
tee /etc/sudoers.d/010_${user}-nopasswd <<EOF
${user} ALL=(ALL) NOPASSWD: ALL
EOF
echo Done.

### Bluez firmware.
echo
echo Installing bluetooth.
sleep 1s
apt install -y bluetooth bluez bluez-tools
echo Done.
echo
echo Building bluez firmware package.
sleep 1s
git clone https://github.com/RPi-Distro/bluez-firmware.git
wget -cq --show-progress http://deb.debian.org/debian/pool/non-free/b/bluez-firmware/bluez-firmware_1.2.orig.tar.gz
cd bluez-firmware
dpkg-buildpackage -us -uc
cd ~
dpkg -i bluez-firmware_*.deb
rm -fdR bluez-firmware*
echo Done.

### Pi Bluetooth
echo
echo Building pi bluetooth package.
sleep 1s
git clone https://github.com/RPi-Distro/pi-bluetooth.git
cd pi-bluetooth
dpkg-buildpackage -us -uc
cd ~
dpkg -i pi-bluetooth_*.deb
rm -fdR pi-bluetooth*
echo Done.

### Cypress wifi firmware
echo
echo Adding brcm firmware from cypress.
sleep 1s
mkdir cypress
cd cypress
wget -cq --show-progress https://community.cypress.com/servlet/JiveServlet/download/15932-1-39799/cypress-fmac-v4.14.52-2018_0928.zip
unzip -qq cypress-fmac-v4.14.52-2018_0928.zip
tar -xf cypress-firmware-v4.14.52-2018_0928.tar.gz
rm -f firmware/*pcie*
cp -f firmware/* /lib/firmware/brcm/
cd ~
rm -fdr cypress
echo Done.

### Certificates
echo
echo Fixing ca certificates.
sleep 1s
mkdir -p certificates
cd certificates
wget -cq --show-progress http://deb.debian.org/debian/pool/main/c/ca-certificates/ca-certificates_20200601~deb10u1.tar.xz
tar -xf ca-certificates_20200601~deb10u1.tar.xz
cd ca-certificates-20200601~deb10u1
dpkg-buildpackage -us -uc
cd ..
dpkg -i *.deb *.udeb
cd ~
rm -fdr certificates
echo Done.

### Htop
echo
echo Installing htop with cpufreq and thermal support.
sleep 1s
git clone https://github.com/leeadama/htop.git
cd htop
./autogen.sh
./configure --prefix=/usr
make
make install
cd ~
rm -fdr htop
echo Done.

### Fixing bluez
echo
echo Fixing bluetooth.
sleep 1s
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/bluez-5.52.tar.xz
echo Done.
echo
tar xf bluez-5.52.tar.xz
rm -f bluez-5.52.tar.xz
cd bluez-5.52
rm -f *dbgsym_5.52*
rm -f *cups_5.52*
rm -f *source_5.52*
dpkg -i *.deb
cd ..
rm -fdR bluez-5.52
echo Done.

###  Adding raspi userland
echo
echo Adding raspi userland.
rm -f /etc/profile
mv -f profile /etc/profile
mv rpi-vc.conf /etc/ld.so.conf.d/rpi-vc.conf
chown root:root /etc/profile
chown root:root /etc/ld.so.conf.d/rpi-vc.conf
sleep 1s
mkdir -p /opt
git clone https://github.com/raspberrypi/userland.git
mv -f userland-remove-hi-pi.patch /root/userland/
cd userland
patch -p1 < userland-remove-hi-pi.patch
rm -f userland-remove-hi-pi.patch
./buildme --aarch64
cd ~
rm -f -d -R userland
ldconfig
echo Done.

### Building raspi-config
#echo
#echo Building rasp-config package.
#apt install -y libparted2 lua5.1 parted psmisc triggerhappy
#sleep 1s
#git clone https://github.com/RPi-Distro/raspi-config.git
#cd raspi-config
#dpkg-buildpackage -us -uc
#cd /root
#dpkg -i raspi-config_*.deb
#rm -fdR raspi-config*
#echo Done.

#### Kernel
echo
echo Installing kernel.
apt -y clean
apt -y autoclean
sleep 1s
cd ~
dpkg -i *.deb
rm -f *.deb
echo Done.
sleep 1s

### Add bcm2835
echo
echo Adding bcm2835 to modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
snd_bcm2835

EOF
chown root:root /etc/modules
echo Done.

### Adding groups
echo
echo Adding to more groups.
sleep 1s
adduser ${user} plugdev
adduser ${user} netdev
adduser ${user} bluetooth
adduser ${user} input
adduser ${user} tty
addgroup --gid 125 kvm
echo Done.

#### Checking for changes
echo
echo Checking for changes.
apt update
apt upgrade -y
apt -y clean
apt -y autoclean
echo Done.

### Clean misc files
rm -f *.patch
rm -f *eeprom*

### Vchiq permissions
echo 'SUBSYSTEM=="vchiq",GROUP="video",MODE="0660"' > /etc/udev/rules.d/10-vchiq-permissions.rules
echo 'SUBSYSTEM=="vcio",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules
echo 'SUBSYSTEM=="vc-mem",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules

# Load services
echo
echo Adding services
chmod +x /etc/init.d/governor
chmod +x /etc/init.d/firstboot
chmod +x /etc/init.d/pwrledoff
chmod +x /etc/init.d/actledoff
chmod +x /etc/init.d/bthelper
chmod +x /etc/init.d/zramswap
update-rc.d firstboot defaults 2
update-rc.d governor defaults 2
update-rc.d bthelper defaults 2
update-rc.d zramswap defaults 2
#update-rc.d pwrledoff defaults 2
#update-rc.d actledoff defaults 2
echo Done.
### Own it
chown -R ${user}:${user} /home/${user}
###### Finish
echo
echo Moving out of stage2 and into IMG creation
sleep 2s

umount /proc /sys
