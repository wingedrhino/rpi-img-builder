#!/usr/bin/env bash
source /root/source.txt
source /root/userdata.txt

set -o errexit
set -o pipefail
set -o nounset

echo 'nameserver 8.8.8.8' > /etc/resolv.conf
echo 'nameserver 8.8.4.4' >> /etc/resolv.conf

mount -t proc proc proc/
mount -t sysfs sys sys/

export DEBIAN_FRONTEND="noninteractive"

apt-get update
apt-get install -y apt-utils
### Locales
apt install -y locales locales-all
localedef -c -f UTF-8 -i en_US en_US.UTF-8
dpkg-reconfigure locales
### Timezone
ln -snf /usr/share/zoneinfo/America/New_York /etc/localtime
echo -n 'America/New_York' > /etc/timezone
apt upgrade -y
apt dist-upgrade -y
echo 'y' | unminimize
apt install -y ${PKGS1}
echo
echo -n 'bcm2711' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2711' /etc/hosts
adduser ${user} --gecos "bcm2711" --disabled-password
### Password
echo "${user}:${passwd}" | chpasswd
adduser ${user} sudo
adduser ${user} audio
adduser ${user} dialout
adduser ${user} video
adduser ${user} disk
groupadd spi
groupadd i2c
groupadd gpio
adduser ${user} spi
adduser ${user} i2c
adduser ${user} gpio

#### Scripts
echo
echo Moving scripts.
sleep 1s
cd ~
mkdir -p /usr/local/bin
mkdir -p /usr/local/sbin
# Scripts
mv -f run-setup /usr/local/bin/
mv -f set-governor /usr/local/bin/
mv -f sysinfo /usr/local/bin/
mv -f temp-monitor /usr/local/bin/tmon
mv -f wifiscan /usr/local/bin/
mv -f deb-eeprom-update /usr/local/bin/
mv -f growpart /usr/bin/
mv -f setup_wifi /boot/rename_to_setup_wifi
# Service
mv -f firstboot.init /etc/init.d/firstboot
mv -f firstboot /usr/local/sbin/
mv -f pwrledoff /usr/local/sbin/
mv -f actledoff /usr/local/sbin/
chmod +x /usr/bin/growpart
chown root:root /usr/bin/growpart
chmod +x /etc/init.d/firstboot
chown root:root /etc/init.d/firstboot
chmod +x /usr/local/bin/*
chmod +x /usr/local/sbin/*
chown -R root:root /usr/local/bin/
chown -R root:root /usr/local/sbin/
echo Done.

#### MOTD
echo
echo Adding motd.
sleep 1s
mkdir -p /etc/update-motd.d
tee /etc/update-motd.d/15-brand <<EOF
#!/bin/bash
echo
toilet -f small --filter metal '${BRAND4}'
echo 
EOF
mv -f 20-sysinfo /etc/update-motd.d/20-sysinfo
rm -f /etc/update-motd.d/10-help-text
chmod +x /etc/update-motd.d/*
chown root:root /etc/update-motd.d/15-brand
chown root:root /etc/update-motd.d/20-sysinfo
echo Done.

### Move mc skins
echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mkdir -p /home/${user}/.config/mc
mv -f user-ini /home/${user}/.config/mc/ini
mv -f nanorc-user /home/${user}/.nanorc
chown -R root:root /root
chown -R ${user}:${user} /home/${user}
echo Done.

#### Adding firmware
echo
echo Adding pi firmware.
sleep 1s
apt install -y zip unzip p7zip-full
unzip -qq master.zip
rm -f master.zip
mkdir -p /lib/firmware
mv -f firmware-nonfree-master/* /lib/firmware
rm -fdR firmware-nonfree-master
cd /lib/firmware/brcm
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43455-sdio.raspberrypi%2C4-model-b.txt
cd ~
echo Done.

#### Extra bluetooth firmware
echo
echo Adding extra bluetooth firmware.
sleep 1s
mv fw-0a5c_21e8.hcd /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
cp /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
chown root:root /lib/firmware/brcm/BCM20702A1-0a5c-21e8.hcd
chown root:root /lib/firmware/brcm/BCM20702A0-0a5c-21e8.hcd
echo Done.

####
echo
echo Bluetooth udev rule.
sleep 1s
mkdir -p /lib/udev/rules.d/
mv -f 99-com.rules /lib/udev/rules.d/99-com.rules
echo Done.

#### Software
echo
echo Installing needed packages.
sleep 1s
apt -y clean
apt -y autoclean
apt update
apt install -y ${PKGS2}

### Network Setup
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
mv -f interfaces /etc/network/interfaces
chown root:root /etc/network/interfaces
mv -f wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
chown root:root /etc/wpa_supplicant/wpa_supplicant.conf
mkdir -p /etc/udev/rules.d
mv -f 80-net-setup-link.rules /etc/udev/rules.d/80-net-setup-link.rules
chown root:root /etc/udev/rules.d/80-net-setup-link.rules
rm -f /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf
echo Done.

### ZSWAP
echo
echo Adding zramswap config.
sleep 1s
rm -f /etc/default/zramswap
mv -f zramswap /etc/default/zramswap
chown root:root /etc/default/zramswap
echo Done.

### MOTD instructions
echo
echo Adding motd first boot.
sleep 1s
rm -f /etc/motd
mv -f motd /etc/motd
mv -f new.motd /etc/new.motd
chown root:root /etc/motd
chown root:root /etc/new.motd
echo Done.

#### Clean up packages
echo
echo Cleaning up.
sleep 1s
apt -y autoremove
apt -y clean
apt -y autoclean
echo Done.

###
echo
echo Adding regdb.
sleep 1s
apt update
apt install -y crda
sed -i "s/REGDOMAIN=/REGDOMAIN=${COUNTRYCODE}/g" /etc/default/crda
echo 'KERNEL=="regulatory*", ACTION=="change", SUBSYSTEM=="platform", RUN+="/sbin/crda"' > /etc/udev/rules.d/60-regdb.rules
git clone https://kernel.googlesource.com/pub/scm/linux/kernel/git/sforshee/wireless-regdb
echo
echo Moving db files.
sleep 1s
cd wireless-regdb
cp -f regulatory.db /lib/firmware/regulatory.db
cp -f regulatory.db.p7s /lib/firmware/regulatory.db.p7s
cd ~
rm -fdr wireless-regdb
echo Done.

### Adding sys-mods
echo
echo Building raspi-sys-mods package.
sleep 1s
apt install -y debhelper d-shlibs rfkill dosfstools psmisc
git clone https://github.com/RPi-Distro/raspberrypi-sys-mods.git
cd raspberrypi-sys-mods
dpkg-buildpackage -us -uc
cd ~
dpkg -i raspberrypi-sys-mods*.deb
rm -fdR raspberrypi-sys-mods*
echo Done.

#### Sudoers file 
echo
echo Creating sudoers file.
sleep 1s
rm -f /etc/sudoers.d/010_pi-nopasswd
tee /etc/sudoers.d/010_${user}-nopasswd <<EOF
${user} ALL=(ALL) NOPASSWD: ALL
EOF
echo Done.

### Bluez firmware.
echo
echo Installing bluetooth.
sleep 1s
apt install -y bluetooth bluez bluez-tools
echo Done.
echo
echo Building bluez firmware package.
sleep 1s
git clone https://github.com/RPi-Distro/bluez-firmware.git
wget -cq --show-progress http://deb.debian.org/debian/pool/non-free/b/bluez-firmware/bluez-firmware_1.2.orig.tar.gz
cd bluez-firmware
dpkg-buildpackage -us -uc
cd ~
dpkg -i bluez-firmware_*.deb
rm -fdR bluez-firmware*
echo Done.

### Pi Bluetooth
echo
echo Building pi bluetooth package.
sleep 1s
git clone https://github.com/RPi-Distro/pi-bluetooth.git
cd pi-bluetooth
dpkg-buildpackage -us -uc
cd ~
dpkg -i pi-bluetooth_*.deb
rm -fdR pi-bluetooth*
echo Done.

### Htop
echo
echo Installing htop with cpufreq and thermal support.
sleep 1s
git clone https://github.com/leeadama/htop.git
cd htop
./autogen.sh
./configure --prefix=/usr
make
make install
cd ~
rm -fdr htop
echo Done.

### Fixing bluez
echo
echo Fixing bluetooth.
sleep 1s
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/bluez-5.53.tar.xz
echo Done.
echo
tar xf bluez-5.53.tar.xz
rm -f bluez-5.53.tar.xz
cd bluez-5.53
rm -f *dbg_5.53*
rm -f *cups_5.53*
rm -f *source_5.53*
dpkg -i *.deb
cd ..
rm -fdR bluez-5.53
apt-mark hold bluez
echo Done.

###  Adding raspi userland
echo
echo Adding raspi userland.
rm -f /etc/profile
mv -f profile /etc/profile
mv rpi-vc.conf /etc/ld.so.conf.d/rpi-vc.conf
chown root:root /etc/profile
chown root:root /etc/ld.so.conf.d/rpi-vc.conf
sleep 1s
mkdir -p /opt
git clone https://github.com/raspberrypi/userland.git
mv -f userland-remove-hi-pi.patch /root/userland/
cd userland
patch -p1 < userland-remove-hi-pi.patch
rm -f userland-remove-hi-pi.patch
./buildme --aarch64
cd ~
rm -f -d -R userland
ldconfig
echo Done.

### Adding eeprom
echo
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
echo Checking for updates.
apt update
echo
echo Installing rpi-eeprom.
sleep 1s
apt install help2man rsync python pciutils -y
###
mkdir -p ~/eeprom
mkdir -p /usr/local/src
cp -f rpi-eeprom-update.patch /usr/local/src/
mv -f rpi-eeprom-update.patch ~/eeprom/
cp -f rpi-eeprom-control.patch /usr/local/src/
mv -f rpi-eeprom-control.patch ~/eeprom/
cd ~/eeprom
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
rm -f rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
mkdir -p debian/patches
mv rpi-eeprom-update.patch debian/patches/rpi-eeprom-update.patch
echo rpi-eeprom-update.patch >> debian/patches/series
mv -f debian rpi-eeprom-${EEPROM_VERSION}/
mv rpi-eeprom-control.patch rpi-eeprom-${EEPROM_VERSION}/
cd rpi-eeprom-${EEPROM_VERSION}
patch -p1 < rpi-eeprom-control.patch
rm -f rpi-eeprom-control.patch
dpkg-buildpackage -us -uc
cd ..
dpkg -i *.deb
cd ..
rm -fdr eeprom
echo
echo Adding user eeprom config.
tee /home/${user}/.eeprom <<EOF
# EEPROM CONFIG
## https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/
EEPROM_VERSION="${EEPROM_VERSION}"
EOF
echo Done.

#### Kernel
echo
echo Installing kernel.
apt -y clean
apt -y autoclean
sleep 1s
cd ~
dpkg -i *.deb
rm -f *.deb
echo Done.
sleep 1s

### Add bcm2835 v4l2
echo
echo Adding bcm2835 v4l2 to modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2

EOF
chown root:root /etc/modules
echo Done.

### Adding groups
echo
echo Adding to more groups.
sleep 1s
adduser ${user} plugdev
adduser ${user} netdev
adduser ${user} bluetooth
adduser ${user} input
adduser ${user} tty
echo Done.

#### Checking for changes
echo
echo Checking for changes.
apt update
apt upgrade -y
apt -y clean
apt -y autoclean
echo Done.

rm -f *.patch

### Vchiq permissions
echo 'SUBSYSTEM=="vchiq",GROUP="video",MODE="0660"' > /etc/udev/rules.d/10-vchiq-permissions.rules
echo 'SUBSYSTEM=="vcio",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules
echo 'SUBSYSTEM=="vc-mem",GROUP="video",MODE="0660"' >> /etc/udev/rules.d/10-vchiq-permissions.rules

#### Led switches
echo
echo Creating power led switch.
sleep 1s
tee /etc/systemd/system/pwrledoff.service <<EOF
[Unit]
Description=Turn off power led
ConditionPathExists=/usr/local/sbin/pwrledoff
[Service]
Type=forking
ExecStart=/usr/local/sbin/pwrledoff &>/dev/null
[Install]
WantedBy=multi-user.target
EOF

echo
echo Creating activity led switch. 
sleep 1s
tee /etc/systemd/system/actledoff.service <<EOF
[Unit]
Description=Turn off activity led
ConditionPathExists=/usr/local/sbin/actledoff
[Service]
Type=forking
ExecStart=/usr/local/sbin/actledoff &>/dev/null
[Install]
WantedBy=multi-user.target
EOF

#### Create first boot
echo
echo Creating first boot.
sleep 1s
tee /etc/systemd/system/firstboot.service <<EOF
[Unit]
Description=First boot
After=network.target
Before=rc-local.service
ConditionPathExists=/usr/local/sbin/firstboot

[Service]
ExecStart=/etc/init.d/firstboot start > /dev/null 2>&1
Type=oneshot
RemainAfterExit=no

[Install]
WantedBy=multi-user.target
EOF

#### Create RC.LOCAL
echo
echo Creating rc.local file.
sleep 1s
tee /etc/systemd/system/rc-local.service <<EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF
tee /etc/rc.local <<EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.
/usr/local/bin/set-governor &
exit 0
EOF
chmod +x /etc/rc.local
echo Done.
### Enable services
echo
echo Enabling Services
sleep 1s
systemctl enable rc-local
systemctl enable ifplugd
systemctl enable haveged
systemctl enable zramswap
systemctl enable bluetooth
update-rc.d firstboot defaults 2
systemctl enable firstboot
systemctl enable serial-getty@ttyUSB0.service
echo Done.
### Own it
chown -R ${user}:${user} /home/${user}
###### Finish
echo
echo Moving out of stage2 and into IMG creation
sleep 2s

umount /proc /sys
